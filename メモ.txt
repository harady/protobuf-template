

## プロトコルバッファコンパイラ
*.protoから各言語のmessage,rpcのデータを生成する


## プロトコルバッファランタイム
プロトコルバッファコンパイラで生成した型をプロトコルバッファ形式のバイナリにシリアライズ
プロトコルバッファ形式のバイナリをプロトコルバッファコンパイラで生成した型にデシリアライズ
するプログラム各言語用のものが用意されている


## プロトコルバッファリリースバイナリ
https://github.com/protocolbuffers/protobuf/releases

protobuf-all-21.6.zip

protobuf-csharp-3.21.6.zip
プロトコルバッファランタイムのソースコード

protoc-21.6-win64.zip
プロトコルバッファコンパイラのバイナリ



protobufのプラグインを実装する方法但しGo
https://qiita.com/yugui/items/87d00d77dee159e74886


protobufのプラグインをC#で実装する方法？ではなかった。
https://developers.google.com/protocol-buffers/docs/csharptutorial


これいいんちゃうん？、ProtocのプラグインをC#で実装したもの
https://github.com/cactuaroid/protoc-gen-myplugincsharp


#### C#で作ったプラグインの起動速度が遅すぎるので最適化したい
ngen.exeを使ってみるか。
→NativeImageCompilerを使用する
https://learn.microsoft.com/ja-jp/windows/msix/desktop/desktop-to-uwp-r2r
　→すでに非推奨だった
→これは？
Microsoft.Net.Native.Compiler 
　→インストールできない
→これは？
https://qiita.com/yaju/items/d5a771f3f00672aa19ff

C:\Windows\Microsoft.NET\Framework64\v4.0.30319\ngen.exe install ./plugin2\protoc-gen-template.exe

NativeAOT visual studio
https://qiita.com/yaju/items/d5a771f3f00672aa19ff
このソースでは利用できません

単一実行ファイルの作成方法がわかる
https://learn.microsoft.com/ja-jp/dotnet/core/deploying/trimming/trim-self-contained?source=recommendations

これをやりたい ReadyToRun + Tiered Compilation

.NET 6は、「 .NET Framework」と「 .NET Core」が統合
https://devlog.grapecity.co.jp/dotnet-6-release/

Tiered Compilationはデフォルトで有効っぽいのでここまででC#の最適化は限界か・・。

.Net 7.0 でAOTが対応する。試してみる
→正式対応してから

#### RubyでParallelを使用して並列処理をして高速化する作戦.


GrのテンプレートエンジンはGo標準のtext/templateを使用している。
C#に移植したものは見当たらない
代替としてT4 テキスト テンプレートを使用するか？


テンプレートエンジンあれこれ
https://zenn.dev/nuits_jp/articles/2022-05-26-text-template-benckmarks

Scriban:Goのtext/templateに近い？
https://github.com/scriban/scriban


Scribanを採用することにした。

VisualStudio用のScribanのextension
https://marketplace.visualstudio.com/items?itemName=xoofx.scriban
